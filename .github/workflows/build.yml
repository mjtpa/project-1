name: Build APK

on:
  push:
    branches: [main]
  workflow_dispatch:

env:
  ANDROID_SDK_ROOT: /opt/android-sdk
  ANDROID_HOME: /opt/android-sdk
  BUILDDOZER_ANDROID_ACCEPT_LICENSE: yes
  USE_SDL2: 1

jobs:
  build:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install system dependencies
        run: |
          sudo apt update && sudo apt install -y \
            build-essential \
            ccache \
            git \
            zip \
            unzip \
            openjdk-17-jdk \
            libncurses5 \
            libffi-dev \
            libssl-dev \
            libsqlite3-dev \
            zlib1g-dev \
            python3-pip \
            imagemagick \
            libsdl2-dev \
            libsdl2-image-dev \
            libsdl2-mixer-dev \
            libsdl2-ttf-dev

          echo "JAVA_HOME=/usr/lib/jvm/java-17-openjdk-amd64" >> $GITHUB_ENV
          echo "/usr/lib/jvm/java-17-openjdk-amd64/bin" >> $GITHUB_PATH

      - name: Add swap space
        run: |
          sudo fallocate -l 4G /swapfile
          sudo chmod 600 /swapfile
          sudo mkswap /swapfile
          sudo swapon /swapfile

      - name: Install Python dependencies
        run: |
          pip install --upgrade pip setuptools wheel buildozer cython==0.29.33 pillow kivy==2.1.0

      - name: Install Android SDK with accepted licenses
        run: |
          # تنظيف أي تثبيتات سابقة
          sudo rm -rf /opt/android-sdk
          sudo rm -rf ~/.android
          
          # إنشاء مجلد SDK
          sudo mkdir -p $ANDROID_SDK_ROOT
          sudo chown -R $USER:$USER $ANDROID_SDK_ROOT
          
          # تنزيل وتثبيت أدوات سطر الأوامر
          wget https://dl.google.com/android/repository/commandlinetools-linux-8512546_latest.zip -O cmdline-tools.zip
          unzip cmdline-tools.zip -d $ANDROID_SDK_ROOT
          mv $ANDROID_SDK_ROOT/cmdline-tools $ANDROID_SDK_ROOT/cmdline-tools-latest
          mkdir -p $ANDROID_SDK_ROOT/cmdline-tools
          mv $ANDROID_SDK_ROOT/cmdline-tools-latest $ANDROID_SDK_ROOT/cmdline-tools/latest
          
          # قبول جميع التراخيص المطلوبة
          mkdir -p $ANDROID_SDK_ROOT/licenses
          echo -e "8933bad161af4178b1185d1a37fbf41ea5269c55\nd56f5187479451eabf01fb78af6dfcb131a6481e\n24333f8a63b6825ea9c5514f83c2829b004d1fee" > $ANDROID_SDK_ROOT/licenses/android-sdk-license
          echo -e "84831b9409646a918e30573bab4c9c91346d8abd" > $ANDROID_SDK_ROOT/licenses/android-sdk-preview-license
          
          # إعداد PATH
          echo "$ANDROID_SDK_ROOT/cmdline-tools/latest/bin" >> $GITHUB_PATH
          
          # تثبيت الحزم الأساسية مع التأكد من قبول التراخيص
          yes | $ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager --sdk_root=$ANDROID_SDK_ROOT "platform-tools" "platforms;android-33" "build-tools;33.0.2"
          
          # إضافة أدوات البناء إلى PATH
          echo "$ANDROID_SDK_ROOT/build-tools/33.0.2" >> $GITHUB_PATH
          echo "$ANDROID_SDK_ROOT/platform-tools" >> $GITHUB_PATH

      - name: Verify Android installation
        run: |
          echo "=== Installed packages ==="
          $ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager --sdk_root=$ANDROID_SDK_ROOT --list
          
          echo "=== Aidl path ==="
          ls -la $ANDROID_SDK_ROOT/build-tools/33.0.2/aidl || echo "Aidl not found!"
          
          echo "=== Environment variables ==="
          env | grep ANDROID
          env | grep PATH

      - name: Prepare build environment
        run: |
          mkdir -p data
          [ ! -f "default_album_cover.gif" ] && convert -size 100x100 xc:#456D89 default_album_cover.gif
          cp default_album_cover.gif data/
          [ ! -f "playlist.json" ] && echo "[]" > playlist.json
          [ ! -f "theme.json" ] && echo '{"theme_name": "DeepPurple"}' > theme.json
          mkdir -p fonts

      - name: Build with Buildozer
        timeout-minutes: 30
        run: |
          # تنظيف البناء السابق
          rm -rf .buildozer/android/platform/build-*/
          rm -rf .buildozer/android/app
          
          # إعداد متغيرات البيئة
          export ANDROIDSDK=$ANDROID_SDK_ROOT
          export ANDROIDNDK=$ANDROID_SDK_ROOT/ndk/25.1.8937393
          export ANDROIDAPI=33
          export NDK_API=21
          
          # تنفيذ البناء
          buildozer --verbose android debug
          
          # إذا فشل البناء، عرض السجلات
          if [ ! -f "bin/*.apk" ]; then
            echo "=== Build failed, showing logs ==="
            find .buildozer -name "*.log" -exec cat {} \;
            exit 1
          fi

      - name: Upload APK artifact
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: music-player-apk
          path: bin/*.apk