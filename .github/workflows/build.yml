name: CI

on:
  push:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
      # الخطوة 1: استخراج الكود
      - name: Checkout code
        uses: actions/checkout@v3

      # الخطوة 2: إعداد بايثون
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      # الخطوة 3: تثبيت التبعيات الأساسية
      - name: Install system dependencies
        run: |
          sudo apt update && sudo apt install -y \
            build-essential \
            ccache \
            git \
            zip \
            unzip \
            openjdk-18-jdk \
            libncurses5 \
            libffi-dev \
            libssl-dev \
            libsqlite3-dev \
            zlib1g-dev \
            python3-pip \
            make \
            autoconf \
            automake \
            libtool \
            patchelf \
            libltdl-dev

          echo "JAVA_HOME=/usr/lib/jvm/java-18-openjdk-amd64" >> $GITHUB_ENV
          echo "$JAVA_HOME/bin" >> $GITHUB_PATH

      # الخطوة 4: تثبيت تبعيات بايثون
      - name: Install Python dependencies
        run: |
          pip install --upgrade pip wheel setuptools
          pip install cython==0.29.33 buildozer==1.4.0 virtualenv

      # الخطوة 5: تثبيت وتكوين Android SDK
      - name: Install Android SDK
        run: |
          # إعداد متغيرات البيئة
          ANDROID_SDK_ROOT="/opt/android-sdk"
          echo "ANDROID_SDK_ROOT=$ANDROID_SDK_ROOT" >> $GITHUB_ENV
          echo "ANDROID_HOME=$ANDROID_SDK_ROOT" >> $GITHUB_ENV

          # إنشاء المجلدات وتغيير الملكية
          sudo mkdir -p $ANDROID_SDK_ROOT
          sudo chown -R $USER:$USER $ANDROID_SDK_ROOT

          # تنزيل وتثبيت أدوات القيادة
          wget https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip -O cmdline-tools.zip
          unzip cmdline-tools.zip -d $ANDROID_SDK_ROOT/cmdline-tools
          mv $ANDROID_SDK_ROOT/cmdline-tools/cmdline-tools $ANDROID_SDK_ROOT/cmdline-tools/latest

          # إعداد المسار الصحيح للأدوات
          echo "$ANDROID_SDK_ROOT/cmdline-tools/latest/bin" >> $GITHUB_PATH
          export PATH="$ANDROID_SDK_ROOT/cmdline-tools/latest/bin:$PATH"

          # التحقق من تثبيت sdkmanager
          echo "Verifying sdkmanager installation..."
          which sdkmanager || echo "sdkmanager not found!"
          ls -la $ANDROID_SDK_ROOT/cmdline-tools/latest/bin/

          # قبول الرخص
          mkdir -p $ANDROID_SDK_ROOT/licenses
          echo "8933bad161af4178b1185d1a37fbf41ea5269c55" > $ANDROID_SDK_ROOT/licenses/android-sdk-license
          echo "d56f5187479451eabf01fb78af6dfcb131a6481e" > $ANDROID_SDK_ROOT/licenses/android-sdk-preview-license

          # تثبيت المكونات الأساسية
          yes | $ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager --sdk_root=$ANDROID_SDK_ROOT \
            "platform-tools" \
            "platforms;android-33" \
            "build-tools;33.0.2" \
            "ndk;25.2.9519653"

          echo "$ANDROID_SDK_ROOT/platform-tools" >> $GITHUB_PATH
          echo "ANDROID_NDK_HOME=$ANDROID_SDK_ROOT/ndk/25.2.9519653" >> $GITHUB_ENV

      # الخطوة 6: التحقق من الأدوات المثبتة
      - name: Verify Android tools
        run: |
          echo "=== Android Tools Verification ==="
          echo "sdkmanager path: $(which sdkmanager)"
          sdkmanager --list --sdk_root=$ANDROID_SDK_ROOT
          javac -version
          adb version

      # الخطوة 7: إعداد Buildozer
      - name: Setup Buildozer
        run: |
          # إنشاء رابط رمزي للتتوافق مع Buildozer
          mkdir -p $ANDROID_SDK_ROOT/tools
          ln -s $ANDROID_SDK_ROOT/cmdline-tools/latest/bin $ANDROID_SDK_ROOT/tools/bin

          # تهيئة Buildozer إذا لزم الأمر
          if [ ! -f buildozer.spec ]; then
            buildozer init
          fi

          # تعديل ملف buildozer.spec
          sed -i "s|^android.ndk_path = .*|android.ndk_path = $ANDROID_NDK_HOME|" buildozer.spec
          sed -i "s|^android.sdk_path = .*|android.sdk_path = $ANDROID_SDK_ROOT|" buildozer.spec

      # الخطوة 8: البناء باستخدام Buildozer
      - name: Build with Buildozer
        run: |
          # تنفيذ البناء مع تسجيل التفاصيل
          buildozer -v android debug 2>&1 | tee build.log
          if [ $? -ne 0 ]; then
            echo "=== Build Failed ==="
            cat build.log
            exit 1
          fi

      # الخطوة 9: رفع الملف الناتج
      - name: Upload APK
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: app-release
          path: bin/*.apk
